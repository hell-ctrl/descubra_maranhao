{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "API Documentation",
    "description": "API documentation for the application.",
    "contact": {
      "email": "netoff197@gmail.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local server."
    },
    {
      "url": "https://descubra-maranhao.onrender.com",
      "description": "Main server"
    }
  ],
  "basePath": "/",
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "JWT token in the format 'Bearer {token}'"
    }
  },
  "paths": {
    "/attraction": {
      "get": {
        "summary": "List all attractions",
        "description": "Retrieve a list of all attractions.",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "type": "integer",
            "default": 1
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Items per page",
            "required": false,
            "type": "integer",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create a new attraction",
        "description": "Create a new attraction with the provided details (only admins).",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Attraction object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Attraction"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Attraction created successfully"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/attraction/recomendeds": {
      "get": {
        "summary": "Get recommended attractions",
        "description": "Retrieve a list of recommended attractions.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of recommendations to retrieve",
            "required": false,
            "type": "integer",
            "default": 5
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/attraction/{attraction_id}": {
      "patch": {
        "summary": "Update an attraction",
        "description": "Update the details of an attraction (only admins).",
        "parameters": [
          {
            "name": "attraction_id",
            "in": "path",
            "description": "Attraction ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updated attraction object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Attraction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Attraction updated successfully"
          },
          "404": {
            "description": "Attraction not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Delete an attraction",
        "description": "Delete an attraction by ID (only admins).",
        "parameters": [
          {
            "name": "attraction_id",
            "in": "path",
            "description": "Attraction ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "Attraction deleted successfully"
          },
          "404": {
            "description": "Attraction not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/user": {
      "get": {
        "summary": "List all users",
        "description": "Retrieve a list of all users (only admins).",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "type": "integer",
            "default": 1
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Items per page",
            "required": false,
            "type": "integer",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "summary": "Create a new user",
        "description": "Register a new user.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Email already in use"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "summary": "Update a user",
        "description": "Update the details of a user.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a user",
        "description": "Delete a user account.",
        "responses": {
          "204": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/auth": {
      "post": {
        "summary": "User login",
        "description": "Authenticate a user and return a JWT token.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Login credentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User authenticated successfully"
          },
          "400": {
            "description": "Invalid credentials"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "definitions": {
    "Attraction": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "maps": {
          "type": "string"
        },
        "photo_urls": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "new_password": {
          "type": "string"
        },
        "profile_photo": {
          "type": "string"
        },
        "adm": {
          "type": "boolean"
        }
      }
    },
    "Login": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    }
  }
}
